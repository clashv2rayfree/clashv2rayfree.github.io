<!DOCTYPE HTML>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://clashv2rayfree.github.io/news/article-31687.htm" />
    <title>SpringMVC拦截器配置方式</title>
        <meta name="description" content="&nbsp; &nbsp; java里的拦截器是动态拦截Action调用的对象。它提供了一种机制可以使开发者可以定义在一个action执行的前后执行的代码，也可以在一个action执行前阻止其执行，同" />
        <link href="/assets/website/css/clashv2rayfree/bootstrap.css" rel="stylesheet" type="text/css" media="all">
    <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
    <!-- Custom Theme files -->
    <link href="/assets/website/css/clashv2rayfree/style.css" rel="stylesheet" type="text/css" media="all" />
    <!-- Custom Theme files -->
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="icon" href="/assets/website/img/clashv2rayfree/favicon.ico" type="image/x-icon"/>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <script type="application/x-javascript">
    addEventListener("load", function() { setTimeout(hideURLbar, 0); }, false);

    function hideURLbar() { window.scrollTo(0, 1); }
    </script>
    <!--Google Fonts-->
    <link href='http://fonts.googleapis.com/css?family=Roboto:400,500,700' rel='stylesheet' type='text/css'>
    <link href='http://fonts.googleapis.com/css?family=Ubuntu+Condensed' rel='stylesheet' type='text/css'>
    <!--google fonts-->
    <script src="/assets/website/js/frontend/clashv2rayfree/jquery-1.11.0.min.js"></script>
    <script src="/assets/website/js/frontend/clashv2rayfree/bootstrap.min.js"></script>
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-0NF953KP3Y"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-0NF953KP3Y');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!--header-top start here-->
    <div class="top-header">
    </div>
    <!--header-top end here-->
    <!--header start here-->
    <!-- NAVBAR
		================================================== -->
    <div class="header w3l">
        <div class="fixed-header">
            <div class="navbar-wrapper">
                <div class="container">
                    <nav class="navbar navbar-inverse navbar-static-top">
                        <div class="navbar-header">
                            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
                                <span class="sr-only">Toggle navigation</span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                            </button>
                            <div class="logo">
                                                                <a class="navbar-brand" href="/">Clash V2ray Free</a>
                                                            </div>
                        </div>
                        <div id="navbar" class="navbar-collapse collapse">
                            <nav class="cl-effect-16" id="cl-effect-16">
                                <ul class="nav navbar-nav">
                                                                        <li>
                                        <a href="/">首页</a>
                                    </li>
                                                                        <li>
                                        <a href="/free-nodes/">免费节点</a>
                                    </li>
                                                                        <li>
                                        <a href="/paid-subscribe/">推荐机场</a>
                                    </li>
                                                                        <li>
                                        <a href="/news/">新闻资讯</a>
                                    </li>
                                                                        <li>
                                        <a href="#">关于</a>
                                    </li>
                                    <li>
                                        <a href="#">联系</a>
                                    </li>
                                </ul>
                            </nav>
                        </div>
                        <div class="clearfix"> </div>
                    </nav>
                </div>
                <div class="clearfix"> </div>
            </div>
        </div>
    </div>
    <!--header end here-->
    <!--about strat here-->
    <div class="about">
        <div class="container">
            <div class="about-main">
                <div class="row">
                    <div class="col-md-9">
                        <ol class="breadcrumb">
                          <li><a href="/">首页</a></li>
                          <li><a href="/news/">新闻资讯</a></li>
                          <li class="active">正文</li>
                        </ol>
                        <div class="about-top">
                            <h1>SpringMVC拦截器配置方式</h1>
                        </div>
                        <div class="about-bottom">
                                            <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="htmledit_views"> <p>&nbsp; &nbsp; java里的拦截器是动态拦截Action调用的对象。它提供了一种机制可以使开发者可以定义在一个action执行的前后执行的代码，也可以在一个action执行前阻止其执行，同时也提供了一种可以提取action中可重用部分的方式。在AOP（Aspect-Oriented Programming）中拦截器用于在某个方法或字段被访问之前，进行拦截然后在之前或之后加入某些操作。可用通过它来进行权限验证，判断用户是否登陆等。</p> <h3>一.定义拦截器</h3> <p>&nbsp; &nbsp; &nbsp;SpringMVC&nbsp;中的Interceptor&nbsp;拦截请求是通过HandlerInterceptor&nbsp;来实现的。该接口有三个方法</p> <pre class="has"><code class="language-java">default boolean preHandle(HttpServletRequest request,  HttpServletResponse response, Object handler)throws Exception {  		return true; 	}</code></pre> <p>&nbsp; &nbsp; 该方法将在请求处理之前进行调用。SpringMVC&nbsp;中的Interceptor&nbsp;是链式的调用的，在一个应用中或者说是在一个请求中可以同时存在多个Interceptor&nbsp;。每个Interceptor&nbsp;的调用会依据它的声明顺序依次执行，而且最先执行的都是Interceptor&nbsp;中的preHandle&nbsp;方法，所以可以在这个方法中进行一些前置初始化操作或者是对当前请求的一个预处理，也可以在这个方法中进行一些判断来决定请求是否要继续进行下去。该方法的返回值是布尔值Boolean&nbsp;类型的，当它返回为false&nbsp;时，表示请求结束，后续的Interceptor&nbsp;和Controller&nbsp;都不会再执行；当返回值为true&nbsp;时就会继续调用下一个Interceptor&nbsp;的preHandle&nbsp;方法，如果已经是最后一个Interceptor&nbsp;的时候就会是调用当前请求的Controller&nbsp;方法。</p> <pre class="has"><code class="language-java">default void postHandle(HttpServletRequest request, HttpServletResponse response,  Object handler,@Nullable ModelAndView modelAndView) throws Exception {  	}</code></pre> <p>&nbsp; &nbsp; 由preHandle&nbsp;方法的解释我们知道这个方法包括后面要说到的afterCompletion&nbsp;方法都只能是在当前所属的Interceptor&nbsp;的preHandle&nbsp;方法的返回值为true&nbsp;时才能被调用。postHandle&nbsp;方法，顾名思义就是在当前请求进行处理之后，也就是Controller&nbsp;方法调用之后执行，但是它会在DispatcherServlet&nbsp;进行视图返回渲染之前被调用，所以我们可以在这个方法中对Controller&nbsp;处理之后的ModelAndView&nbsp;对象进行操作。</p> <pre class="has"><code class="language-java">default void afterCompletion(HttpServletRequest request,  HttpServletResponse response, Object handler,@Nullable Exception ex) throws Exception {  	}</code></pre> <p>&nbsp; &nbsp; 该方法也是需要当前对应的Interceptor&nbsp;的preHandle&nbsp;方法的返回值为true时才会执行。顾名思义，该方法将在整个请求结束之后，也就是在DispatcherServlet&nbsp;渲染了对应的视图之后执行。这个方法的主要作用是用于进行资源清理工作的。</p> <h3>二.把定义好的拦截器类加入到拦截体系中</h3> <p>需要mvc命名空间</p> <pre class="has"><code>xmlns:mvc="http://www.springframework.org/schema/mvc" 	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd</code></pre> <pre class="has"><code>&lt;mvc:interceptors&gt; 		&lt;mvc:interceptor&gt; 			&lt;!--匹配的路径 --&gt; 			&lt;mvc:mapping path="/*" /&gt; 			&lt;!--不匹配的路径 --&gt; 			&lt;mvc:exclude-mapping path="/js/*" /&gt; 			&lt;bean class="com.buba.interceptor.TestInterceptor" /&gt; 		&lt;/mvc:interceptor&gt; &lt;/mvc:interceptors&gt;</code></pre> <p><strong>拦截器和过滤器区别</strong><br /> ①拦截器是基于<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://lib.csdn.net/base/javase"  rel="nofollow">Java</a>的反射机制的，而过滤器是基于函数回调。<br /> ②拦截器不依赖与servlet容器，依赖于web框架，在SpringMVC中就是依赖于SpringMVC框架。过滤器依赖与servlet容器。<br /> ③拦截器只能对action（也就是controller）请求起作用，而过滤器则可以对几乎所有的请求起作用,并且可以对请求的资源进行起作用，但是缺点是一个过滤器实例只能在容器初始化时调用一次。<br /> ④拦截器可以访问action上下文、值栈里的对象，而过滤器不能访问。<br /> ⑤在action的生命周期中，拦截器可以多次被调用，而过滤器只能在容器初始化时被调用一次。<br /> ⑥拦截器可以获取IOC容器中的各个bean，而过滤器就不行，这点很重要，在拦截器里注入一个service，可以调用业务逻辑</p> <p><strong>如果本文对您有很大的帮助，还请点赞关注一下。</strong></p> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-31171.htm">合肥市宠物收容中心 合肥市宠物收容中心电话</a></p>
                                        <p>下一个：<a href="/news/article-31688.htm">python3.5上使用virtualenv创建虚拟环境的坑</a></p>
                                    </div>
                                        </div>

                        
                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-24654.htm" title="中国动物疫苗生产企业排名前十 中国动物疫苗生产企业排名前十名">中国动物疫苗生产企业排名前十 中国动物疫苗生产企业排名前十名</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-31-free-v2ray.htm" title="「10月31日」最高速度19.4M/S，2024年Shadowrocket/SSR/Clash/V2ray每天更新免费节点订阅链接">「10月31日」最高速度19.4M/S，2024年Shadowrocket/SSR/Clash/V2ray每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-27445.htm" title="Python数据分析与展示——Pandas基本操作">Python数据分析与展示——Pandas基本操作</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-4-24-free-clash-subscribe.htm" title="「4月24日」最高速度19.1M/S，2024年SSR/V2ray/Shadowrocket/Clash每天更新免费节点订阅链接">「4月24日」最高速度19.1M/S，2024年SSR/V2ray/Shadowrocket/Clash每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-6-2-free-node-subscribe-links.htm" title="「6月2日」最高速度18.9M/S，2024年Clash/V2ray/SSR/Shadowrocket每天更新免费节点订阅链接">「6月2日」最高速度18.9M/S，2024年Clash/V2ray/SSR/Shadowrocket每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-8-30-free-v2ray-subscribe.htm" title="「8月30日」最高速度22.6M/S，2024年SSR/V2ray/Clash/Shadowrocket每天更新免费节点订阅链接">「8月30日」最高速度22.6M/S，2024年SSR/V2ray/Clash/Shadowrocket每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-2-clash-node-daily-updates.htm" title="「12月2日」最高速度18.9M/S，2024年Clash/SSR/Shadowrocket/V2ray每天更新免费节点订阅链接">「12月2日」最高速度18.9M/S，2024年Clash/SSR/Shadowrocket/V2ray每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-14-free-ssr-subscribe.htm" title="「12月14日」最高速度19.9M/S，2024年V2ray/Clash/Shadowrocket/SSR每天更新免费订阅源地址">「12月14日」最高速度19.9M/S，2024年V2ray/Clash/Shadowrocket/SSR每天更新免费订阅源地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-25-node-share-links.htm" title="「11月25日」最高速度22.5M/S，2024年Shadowrocket/SSR/Clash/V2ray每天更新免费节点订阅链接">「11月25日」最高速度22.5M/S，2024年Shadowrocket/SSR/Clash/V2ray每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-7-17-clash-v2ray-ss-ssr.htm" title="「7月17日」最高速度22.6M/S，2024年Shadowrocket/Clash/V2ray/SSR每天更新免费节点订阅链接">「7月17日」最高速度22.6M/S，2024年Shadowrocket/Clash/V2ray/SSR每天更新免费节点订阅链接</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">87</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">33</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">31</span> <a href="/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-09/" title="2024-09 归档">2024-09</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">31</span> <a href="/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">27</span> <a href="/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">29</span> <a href="/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">31</span> <a href="/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">26</span> <a href="/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                    </ul>
    </div>
</div>


                    </div>
                </div>
            </div>
        </div>
    </div>
    <!--about end here-->
        <!--copy rights start here-->
    <div class="copy-rights">
        <div class="container">
            <div class="copy-rights-main">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                <p>
                    ClashV2rayFree官网节点站 版权所有
                    <br />
                    Powered by WordPress
                </p>
            </div>
        </div>
    </div>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>